

showimgBoss();

// Fonction de transformation des nombres trop grand
// 1000 =1K, 1.000.000 = 1M etc...
function translateNumber(numberToTranslate){
    var formatedNumber;
    if (numberToTranslate<1000){
        formatedNumber=numberToTranslate.toFixed(2);
    } else if (numberToTranslate>=1000 && numberToTranslate<1000000){
        var divisedNumber = numberToTranslate/1000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"K";
    } else if (numberToTranslate>=1000000 && numberToTranslate<1000000000){
        var divisedNumber = numberToTranslate/1000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"M";
    } else if (numberToTranslate>=1000000000 && numberToTranslate<1000000000000){
        var divisedNumber = numberToTranslate/1000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"B";
    } else if (numberToTranslate>=1000000000000 && numberToTranslate<1000000000000000){
        var divisedNumber = numberToTranslate/1000000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"T";
    } else if (numberToTranslate>=1000000000000000 && numberToTranslate<1000000000000000000){
        var divisedNumber = numberToTranslate/1000000000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"P";
    } else if (numberToTranslate>=1000000000000000000 && numberToTranslate<1000000000000000000000){
        var divisedNumber = numberToTranslate/1000000000000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"E";
    } else if (numberToTranslate>=1000000000000000000000 && numberToTranslate<1000000000000000000000000){
        var divisedNumber = numberToTranslate/1000000000000000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"Z";
    } else if (numberToTranslate>=1000000000000000000000000 && numberToTranslate<1000000000000000000000000000){
        var divisedNumber = numberToTranslate/1000000000000000000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"Y";
    } else if (numberToTranslate>=1000000000000000000000000000 && numberToTranslate<1000000000000000000000000000000){
        var divisedNumber = numberToTranslate/1000000000000000000000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"Aa";
    } else if (numberToTranslate>=1000000000000000000000000000000 && numberToTranslate<1000000000000000000000000000000000){
        var divisedNumber = numberToTranslate/1000000000000000000000000000000;
        var stringdivisedNumber=divisedNumber.toFixed(2).toString();
        formatedNumber=stringdivisedNumber+"Ab";
    }
    return formatedNumber;
}

// fonction de sauvegarde dans les cookies
function saveMoney(){
    var sauvegarde = {
        compteBanquaire,
        Unit01,
        Unit02,
        Unit03,
        Unit04,
        Unit05,
        Unit06,
        ennemyDoor,
        ennemyTroops,
        ennemyBoss,
        currentStage
    };
    localStorage.setItem('coord',JSON.stringify(sauvegarde));
}

// fonction de lecture de la sauvegarde
function lectureMoney(){
    var sauvegarde = JSON.parse(localStorage.getItem('coord'));
    ennemyDoor = sauvegarde.ennemyDoor;
    ennemyTroops = sauvegarde.ennemyTroops;
    ennemyBoss = sauvegarde.ennemyBoss;
    currentStage=sauvegarde.currentStage;
}

// Fonction du bouton travailler
// Incrémente le compte banquaire de 1 à chaque clic
function addMoney (){
    compteBanquaire = compteBanquaire+1;
    return compteBanquaire;
}

// tick toute les 33 millisecondes afin d'afficher 30 images par secondes
// gére les affichages
function ShowBanq() {
    arrayUnit =[Unit01,Unit02,Unit03,Unit04,Unit05,Unit06];
    showUpgrade();
    showCompteBanquaire=translateNumber(compteBanquaire);
    var div = document.getElementById("compteBanq");
    div.textContent = showCompteBanquaire;

    showIncomePSecond = translateNumber(incomePSecond);
    var div2 = document.getElementById("incomePSecond");
    div2.textContent = showIncomePSecond;

    var showDPS = translateNumber(degatTotal);
    var div2 = document.getElementById("DPSecond");
    div2.textContent = showDPS;

    showLifeBoss = translateNumber(ennemyBoss.life);
    showLifeTroops = translateNumber(ennemyTroops.life);
    showLifeMainDoor = translateNumber(ennemyDoor.life);

    var div3 = document.getElementById("bossLifePoint");
    if (currentStage==="Main Door"){
        div3.textContent = showLifeMainDoor;
    } else if (currentStage==="Troops"){
        div3.textContent = showLifeTroops;
    } else if(currentStage==="Boss") {
        div3.textContent = showLifeBoss;
    }
    var div4 = document.getElementById("currentStage");
    div4.textContent = currentStage;

    setTimeout("ShowBanq()", 33);
}

// Affichage de l'image des boss
function showimgBoss(){
    if (currentStage==="Main Door"){
        document.getElementById("imgBoss").src="../images/door01.gif";
    } else if (currentStage==="Troops"){
        document.getElementById("imgBoss").src="../images/soldat05.gif";
    } else if (currentStage==="Boss"){
        document.getElementById("imgBoss").src="../images/boss03.gif";
    }
}

// Affichage du nombre d'unitée
//Unit01
function showUnit01(){
    var div2 = document.getElementById("nbrUnit01");
    div2.textContent = Unit01.quantity;
    div2 = document.getElementById("prixUnit01");
    div2.textContent = translateNumber(Unit01.prix);
}
//Unit02
function showUnit02(){
    var div2 = document.getElementById("nbrUnit02");
    div2.textContent = Unit02.quantity;
    div2 = document.getElementById("prixUnit02");
    div2.textContent = translateNumber(Unit02.prix);
}
//Unit03
function showUnit03(){
    var div2 = document.getElementById("nbrUnit03");
    div2.textContent = Unit03.quantity;
    div2 = document.getElementById("prixUnit03");
    div2.textContent = translateNumber(Unit03.prix);
}
//Unit04
function showUnit04(){
    var div2 = document.getElementById("nbrUnit04");
    div2.textContent = Unit04.quantity;
    div2 = document.getElementById("prixUnit04");
    div2.textContent = translateNumber(Unit04.prix);
}
//Unit05
function showUnit05(){
    var div2 = document.getElementById("nbrUnit05");
    div2.textContent = Unit05.quantity;
    div2 = document.getElementById("prixUnit05");
    div2.textContent = translateNumber(Unit05.prix);
}
//Unit06
function showUnit06(){
    var div2 = document.getElementById("nbrUnit06");
    div2.textContent = Unit06.quantity;
    div2 = document.getElementById("prixUnit06");
    div2.textContent = translateNumber(Unit06.prix);
}

// Calcule l'argent perçu par seconde total
function calcIncome(){
    var unit01 = calcIncomeUnit01();
    var unit02 = calcIncomeUnit02();
    var unit03 = calcIncomeUnit03();
    var unit04 = calcIncomeUnit04();
    var unit05 = calcIncomeUnit05();
    var unit06 = calcIncomeUnit06();
    incomePSecond= unit01 + unit02 + unit03+ unit04 + unit05 + unit06;
    return incomePSecond
}

// Calcule l'argent perçu par seconde pour UNIT01
function calcIncomeUnit01(){
    if (Unit01.globalBonus===0){
        Unit01.income = (Unit01.quantity*0.1);

    } else {
        Unit01.income= (Unit01.quantity*0.1)*Unit01.globalBonus;
    }

    return Unit01.income;
}

// Calcule l'argent perçu par seconde pour UNIT02
function calcIncomeUnit02(){
    if (Unit02.globalBonus===0) {
        Unit02.income = Unit02.quantity * 1;
    } else {
        Unit02.income= (Unit02.quantity*1)*Unit02.globalBonus
    }
    return Unit02.income;
}

// Calcule l'argent perçu par seconde pour UNIT03
function calcIncomeUnit03(){
    if (Unit03.globalBonus===0) {
        Unit03.income = Unit03.quantity * 8;
    } else {
        Unit03.income= (Unit03.quantity*8)*Unit03.globalBonus
    }
    return Unit03.income;
}

// Calcule l'argent perçu par seconde pour UNIT04
function calcIncomeUnit04(){
    if (Unit04.globalBonus===0) {
        Unit04.income = Unit04.quantity * 47;
    } else {
        Unit04.income= (Unit04.quantity*47)*Unit04.globalBonus
    }
    return Unit04.income;
}

// Calcule l'argent perçu par seconde pour UNIT05
function calcIncomeUnit05(){
    if (Unit05.globalBonus===0) {
        Unit05.income = Unit05.quantity * 260;
    } else {
        Unit05.income= (Unit05.quantity*260)*Unit05.globalBonus
    }
    return Unit05.income;
}

// Calcule l'argent perçu par seconde pour UNIT06
function calcIncomeUnit06(){
    if (Unit06.globalBonus===0) {
        Unit06.income = Unit06.quantity * 1400;
    } else {
        Unit06.income= (Unit06.quantity*1400)*Unit06.globalBonus
    }
    return Unit06.income;
}

// ------ RESET SAVE ------
function resetSave(){
    if (confirm("Êtes-vous sur de vouloir supprimer votre sauvegarde ?")==true) {
        compteBanquaire=0;
        Unit01.quantity = 0;
        Unit01.prix = 25;
        Unit01.degats = 0.1;
        Unit01.income = 0;
        Unit01.bonus = {
            '10GET': [false,250,"upgUnit01_10",10],
            '25GET': [false,1500,'upgUnit01_25',25],
            '50GET': [false,15000,'upgUnit01_50',50],
            '100GET': [false,165000,'upgUnit01_100',100],
            '150GET':[false,1980000,'upgUnit01_150',150]
        };
        Unit01.bonusD={
            '10GET': [false,250,'upgDMGUnit01_10',10],
            '25GET': [false,1500,'upgDMGUnit01_25',25],
            '50GET': [false,15000,'upgDMGUnit01_50',50],
            '100GET': [false,165000,'upgDMGUnit01_100',100],
            '150GET':[false,1980000,'upgDMGUnit01_150',150]
        }
        Unit01.globalBonus = 0;
        Unit01.globalDmgBonus = 0;

        console.log(Unit01);

// - unit02 -
        Unit02.quantity = 0;
        Unit02.prix = 100;
        Unit02.degats = 1;
        Unit02.income = 0;
        Unit02.bonus = {
            '10GET': [false,1500,'upgUnit02_10',10],
            '25GET': [false,15000,'upgUnit02_25',25],
            '50GET': [false,165000,'upgUnit02_50',50],
            '100GET': [false,1980000,'upgUnit02_100',100],
            '150GET': [false,12270000,'upgUnit02_150',150]
        };
        Unit02.bonusD = {
            '10GET': [false,1500,'upgDMGUnit02_10',10],
            '25GET': [false,15000,'upgDMGUnit02_25',25],
            '50GET': [false,165000,'upgDMGUnit02_50',50],
            '100GET': [false,1980000,'upgDMGUnit02_100',100],
            '150GET': [false,12270000,'upgDMGUnit02_150',150]
        };
        Unit02.globalBonus = 0;
        Unit02.globalDmgBonus = 0;


// - unit03 -
        Unit03.quantity = 0;
        Unit03.prix = 1100;
        Unit03.degats = 8;
        Unit03.income = 0;
        Unit03.bonus = {
            '10GET': [false,165000,'upgUnit03_10',10],
            '25GET': [false,1980000,'upgUnit03_25',25],
            '50GET': [false,12270000,'upgUnit03_50',50],
            '100GET': [false,76111200,'upgUnit03_100',100],
            '150GET': [false,471889440,'upgUnit03_150',150]
        };
        Unit03.bonusD = {
            '10GET': [false,165000,'upgDMGUnit03_10',10],
            '25GET': [false,1980000,'upgDMGUnit03_25',25],
            '50GET': [false,12270000,'upgDMGUnit03_50',50],
            '100GET': [false,76111200,'upgDMGUnit03_100',100],
            '150GET': [false,471889440,'upgDMGUnit03_150',150]
        };
        Unit03.globalBonus = 0;
        Unit03.globalDmgBonus = 0;


// - unit04 -
        Unit04.quantity = 0;
        Unit04.prix = 12000;
        Unit04.degats = 47;
        Unit04.income = 0;
        Unit04.bonus = {
            '10GET': [false,1980000,'upgUnit04_10',10],
            '25GET': [false,12270000,'upgUnit04_25',25],
            '50GET': [false,76111200,'upgUnit04_50',50],
            '100GET': [false,471889440,'upgUnit04_100',100],
            '150GET': [false,2925714528,'upgUnit04_150',150]
        };
        Unit04.bonusD = {
            '10GET': [false,1980000,'upgDMGUnit04_10',10],
            '25GET': [false,12270000,'upgDMGUnit04_25',25],
            '50GET': [false,76111200,'upgDMGUnit04_50',50],
            '100GET': [false,471889440,'upgDMGUnit04_100',100],
            '150GET': [false,2925714528,'upgDMGUnit04_150',150]
        };
        Unit04.globalBonus = 0;
        Unit04.globalDmgBonus = 0;

// - unit05 -
        Unit05.quantity = 0;
        Unit05.prix = 130000;
        Unit05.degats = 260;
        Unit05.income = 0;
        Unit05.bonus = {
            '10GET': [false,12270000,'upgUnit05_10',10],
            '25GET': [false,76111200,'upgUnit05_25',25],
            '50GET': [false,471889440,'upgUnit05_50',50],
            '100GET': [false,2925714528,'upgUnit05_100',100],
            '150GET': [false,18139430073,'upgUnit05_150',150]
        };
        Unit05.bonusD = {
            '10GET': [false,12270000,'upgDMGUnit05_10',10],
            '25GET': [false,76111200,'upgDMGUnit05_25',25],
            '50GET': [false,471889440,'upgDMGUnit05_50',50],
            '100GET': [false,2925714528,'upgDMGUnit05_100',100],
            '150GET': [false,18139430073,'upgDMGUnit05_150',150]
        };
        Unit05.globalBonus = 0;
        Unit05.globalDmgBonus = 0;


// - unit06 -
        Unit06.quantity = 0;
        Unit06.prix = 1400000;
        Unit06.degats = 1400;
        Unit06.income = 0;
        Unit06.bonus = {
            '10GET': [false,76111200,'upgUnit06_10',10],
            '25GET': [false,471889440,'upgUnit06_25',25],
            '50GET': [false,2925714528,'upgUnit06_50',50],
            '100GET': [false,18139430073,'upgUnit06_100',100],
            '150GET': [false,112464466456,'upgUnit06_150',150]
        };
        Unit06.bonusD = {
            '10GET': [false,76111200,'upgDMGUnit06_10',10],
            '25GET': [false,471889440,'upgDMGUnit06_25',25],
            '50GET': [false,2925714528,'upgDMGUnit06_50',50],
            '100GET': [false,18139430073,'upgDMGUnit06_100',100],
            '150GET': [false,112464466456,'upgDMGUnit06_150',150]
        };
        Unit06.globalBonus = 0;
        Unit06.globalDmgBonus = 0;
        ennemyBoss.baseLife=1000000000;
        ennemyBoss.life=1000000000;
        ennemyBoss.level=1;
        ennemyTroops.baseLife=15;
        ennemyDoor.baseLife=5;
        ennemyTroops.life=15;
        ennemyDoor.life=5;
        ennemyDoor.level=1;
        ennemyTroops.level=1;
        currentStage="Main Door";
        saveMoney();
        showUnit01();
        showUnit02();
        showUnit03();
        showUnit04();
        showUnit05();
        showUnit06();
        showBossLevel();

        alert('VOILA YA PLUS RIEN')
    } else {
        alert('Reset annulé')
    }

}

// ------ BUY UNIT ------

function buyUnit(name,show){
    if (compteBanquaire >= name.prix){
        name.quantity+=1;
        compteBanquaire-=name.prix;
        name.prix= name.prix*1.2;
        show();
    }
}

//Calcule les dégats
function calcDegats(){
    if (Unit01.globalDmgBonus===0){
        var degat01 =(Unit01.degats*Unit01.quantity);
    } else {
        var degat01 =(Unit01.degats*Unit01.quantity)*Unit01.globalDmgBonus;
    }
    if (Unit02.globalDmgBonus===0){
        var degat02 =(Unit02.degats*Unit02.quantity);
    } else {
        var degat02 =(Unit02.degats*Unit02.quantity)*Unit02.globalDmgBonus;
    }
    if (Unit03.globalDmgBonus===0){
        var degat03 =(Unit03.degats*Unit03.quantity);
    } else {
        var degat03 =(Unit03.degats*Unit03.quantity)*Unit03.globalDmgBonus;
    }
    if (Unit04.globalDmgBonus===0){
        var degat04 =(Unit04.degats*Unit04.quantity);
    } else {
        var degat04 =(Unit04.degats*Unit04.quantity)*Unit04.globalDmgBonus;
    }
    if (Unit05.globalDmgBonus===0){
        var degat05 =(Unit05.degats*Unit05.quantity);
    } else {
        var degat05 =(Unit05.degats*Unit05.quantity)*Unit05.globalDmgBonus;
    }
    if (Unit06.globalDmgBonus===0){
        var degat06 =(Unit06.degats*Unit06.quantity);
    } else {
        var degat06 =(Unit06.degats*Unit06.quantity)*Unit06.globalDmgBonus;
    }
    degatTotal= degat01+degat02+degat03+degat04+degat05+degat06;
}

// Boucle principale se relancant toute les secondes
// Gére les dégats par seconde
// ''    '' l'argent perçu par seconde
function tickLoop(){
    downTimerMission();
    calcDegats();
    compteBanquaire=compteBanquaire+ calcIncome();

    if (currentStage==="Main Door"){
        ennemyDoor.life=ennemyDoor.life-degatTotal;
        if (ennemyDoor.life<=0) {
            ennemyDoor.life = ((ennemyDoor.baseLife * 1.2)*ennemyDoor.level)*ennemyBoss.level;
            ennemyDoor.baseLife=ennemyDoor.life;
            ennemyDoor.level = ennemyDoor.level + 1;
            compteurBossDoor = (5 + ennemyBoss.level);
            document.getElementById("imgBoss").src = "../images/explosion01.gif";
            setTimeout("nextTickLoop()",1000);
        }

    } else if(currentStage==="Troops"){
        ennemyTroops.life=ennemyTroops.life-degatTotal;
        if (ennemyTroops.life<=0){
            ennemyTroops.level=ennemyTroops.level+1;
            ennemyTroops.life=((ennemyTroops.baseLife*1.2)*ennemyTroops.level)*ennemyBoss.level;
            ennemyTroops.baseLife=ennemyTroops.life;
            compteurBossTroops=10+(ennemyBoss.level*2)
            document.getElementById("imgBoss").src="../images/explosion01.gif";
            setTimeout("nextTickLoop()",1000);
        }
    } else if(currentStage==="Boss") {
        ennemyBoss.life=ennemyBoss.life-degatTotal;
        if (ennemyBoss.life<=0){
            ennemyBoss.bonusKill=ennemyBoss.baseLife*2;
            compteBanquaire=compteBanquaire+ennemyBoss.bonusKill;
            ennemyBoss.life=(ennemyBoss.baseLife*2)*ennemyBoss.level;
            ennemyBoss.baseLife=ennemyBoss.life;
            ennemyBoss.level=ennemyBoss.level+1;
            currentStage="Main Door";
            document.getElementById("imgBoss").src="../images/explosion01.gif";
            showimgBoss();
            showBossLevel();
        }
    } else {
    }

    var pourcentlife;
    if (currentStage==="Main Door"){
        pourcentlife = (ennemyDoor.life/ennemyDoor.baseLife)*100;
        if (ennemyDoor.life<0){
            document.getElementById('life').style.width = 0+'%';
        } else {
            pourcentlife = pourcentlife.toFixed(0);
            document.getElementById('life').style.width = pourcentlife+'%';
        }
    } else if (currentStage==="Troops"){
        pourcentlife=(ennemyTroops.life/ennemyTroops.baseLife)*100;
        if (ennemyTroops.life<0){
            document.getElementById('life').style.width = 0+'%';
        } else {
            pourcentlife = pourcentlife.toFixed(0);
            document.getElementById('life').style.width = pourcentlife+'%';
        }
    } else if (currentStage==="Boss"){
        pourcentlife= (ennemyBoss.life/ennemyBoss.baseLife)*100;
        if (ennemyBoss.life<0){
            document.getElementById('life').style.width = 0+'%';
        } else {
            pourcentlife = pourcentlife.toFixed(0);
            document.getElementById('life').style.width = pourcentlife+'%';
        }
    } else {}
    showTimerMission();
    saveMoney();
    setTimeout("tickLoop()",1000);
}

// Suite de la boucle principale
function nextTickLoop(){
    if (ennemyDoor.level >= compteurBossDoor) {
        currentStage = "Troops";
        ennemyDoor.level = 1;
        ennemyDoor.baseLife = ennemyDoor.life;

    }
    if (ennemyTroops.level>=compteurBossTroops){
        currentStage="Boss";
        ennemyTroops.level=1;
        ennemyTroops.baseLife=ennemyTroops.life;
    }

    showimgBoss()
    showBossLevel();
}

// ------- SHOW BOSS LEVEL --------
function showBossLevel() {
    var div2 = document.getElementById("levelBoss");
    if (currentStage==="Main Door"){
        div2.textContent = ennemyDoor.level;
    } else if (currentStage==="Troops"){
        div2.textContent = ennemyTroops.level;
    } else if (currentStage==="Boss"){
        div2.textContent = ennemyBoss.level;
    }
    showimgBoss();


}

// ----------- SHOW UPGRADE UNIT -----------
function showUpgrade(){
        for (key in arrayUnit){

            var name = arrayUnit[key];

            for (key2 in name.bonus){
                if (name.quantity >= name.bonus[key2][3] && name.bonus[key2][0]===false){
                    var div = document.getElementById(name.bonus[key2][2]);
                    div.style.display = 'inline-block';
                } else {
                    var div = document.getElementById(name.bonus[key2][2]);
                    div.style.display = 'none';
                }}

            for (key2 in name.bonusD){
                if (name.quantity >= name.bonusD[key2][3] && name.bonusD[key2][0]===false){
                    var div = document.getElementById(name.bonusD[key2][2]);
                    div.style.display = 'inline-block';

                } else {
                    var div = document.getElementById(name.bonusD[key2][2]);
                    div.style.display = 'none';
                }
            }

        }
}
// ------- CHECK UPGRADE ALREADY BOUGHT ---------
// vérifie si des upgrades n'ont pas déja étées achetées aprés la lecture de la sauvegarde

// ----- Hero Section

// Envoi du héro en mission
function timerMissionHero(){
    var div = document.getElementById('imgHeros');
    div.style.position = "absolute";
    div.style.left = 120+"%";
    div.style.top = -50+"%";
    div = document.getElementById('enabledMissionButton');
    div.style.display = "none";
    div = document.getElementById('disabledMissionButton');
    div.style.display = "flex";


    inMission=true;
    setTimeout('missionHero()',tempsMission);
    setTimeout('showAttackHero()',1000);
}

function missionHero(){
    if (currentStage==="Main Door"){
        ennemyDoor.life=ennemyDoor.life-degatTotalHero;
    } else if(currentStage==="Troops"){
        ennemyTroops.life=ennemyTroops.life-degatTotalHero;

    } else if(currentStage==="Boss") {
        ennemyBoss.life=ennemyBoss.life-degatTotalHero;
    }
    compteBanquaire=compteBanquaire+incomeHero;
    var div = document.getElementById('imgHeros');
    div.src="../images/hero01.gif";
    div.style.width=100+'px';
    div.style.left =36+'%';
    div.style.top =30+'%';

    setTimeout('resetDeplacementHero()',1000)

}

function showAttackHero(){
    var div = document.getElementById("imgHeros");
    div.src="../images/hero01attack01.gif";
    div.style.width=200+'px';
}


function resetDeplacementHero(){
    inMission =false;
    var div = document.getElementById('imgHeros');
    div.style.position = "static";
}

function showTimerMission(){
    var showableTimer = formateTimer(tempsMission);
    var div = document.getElementById('timerMission');
    div.textContent = showableTimer;
    div =  document.getElementById('degatHero');
    div.textContent = degatTotalHero;
    div =  document.getElementById('incomeHero');
    div.textContent = incomeHero;

}

function downTimerMission(){
    hideMissionButton();
    if (tempsMission>0 && inMission===true){
        tempsMission = tempsMission-1000;
    } else{
        tempsMission=baseTempsMission;
    }
}

function formateTimer(timeToTranslate){
    var formatedTime;
    if (timeToTranslate<60000){
        formatedTime=timeToTranslate.toFixed(2);
        formatedTime=formatedTime/1000;
        formatedTime=formatedTime+" sec"
    } else if (timeToTranslate>=60000 && timeToTranslate<3600000){
        formatedTime = timeToTranslate/60000;
        formatedTime=formatedTime+"min";
    } else if (timeToTranslate>=3600000){
        formatedTime = timeToTranslate/3600000;
        formatedTime=formatedTime+"h";
    }
    return formatedTime;
}

function hideMissionButton(){
    if (inMission===true){
        var div = document.getElementById('enabledMissionButton');
        div.style.display = 'none';
        div = document.getElementById('disabledMissionButton');
        div.style.display = 'flex';
    } else {
        var div = document.getElementById('disabledMissionButton');
        div.style.display = 'none';
        div = document.getElementById('enabledMissionButton');
        div.style.display = 'flex';
    }
}

// Affichage achat matériel
//Weapon
function showWeaponMenu(){
    var div = document.getElementById('WeaponMenu');
    div.style.left = 0+'px';
}

function hideWeaponMenu(){
    var div = document.getElementById('WeaponMenu');
    div.style.left = -500+'px';
}

//Buy Hero upg
//Weapon

function buyUpgWeaponHero01(){
    if (compteBanquaire>=250){
    var div = document.getElementById('upgWeaponHero01');
    div.style.display = 'none';
    compteBanquaire=compteBanquaire-250;
    }
}


showUnit01();
showUnit02();
showUnit03();
showUnit04();
showUnit05();
showUnit06();
ShowBanq();
tickLoop();
showBossLevel();